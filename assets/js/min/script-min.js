"use strict";var timer,typingEffect=function(){var t=words[wordIndex].split("");(function e(){if(!(0<t.length))return setTimeout(function(){deletingEffect()},2e3),!1;document.querySelector(".typewriting").innerHTML+=t.shift(),timer=setTimeout(e,100)})()},deletingEffect=function(){var t=words[wordIndex].split("");(function e(){if(!(0<t.length))return words.length>wordIndex+1?wordIndex++:wordIndex=0,typingEffect(),!1;t.pop(),document.querySelector(".typewriting").innerHTML=t.join(""),timer=setTimeout(e,100)})()},words=["Web Designer","Front-End Developer"],wordIndex=0;typingEffect();var body=document.querySelector("body"),header=document.querySelector("header"),menu=document.querySelector(".menu"),menuIcon=document.querySelector(".menu__open"),navPrimary=document.querySelector("#nav-primary"),navMobile=document.querySelector("#nav-mobile"),navItems=document.querySelectorAll('#nav-mobile a[href^="#"]');menu.addEventListener("click",function(){navPrimary.classList.toggle("active"),menuIcon.classList.toggle("menu__open--active"),header.classList.toggle("open"),navMobile.classList.toggle("open"),body.classList.toggle("disable")}),window.addEventListener("click",function(t){navItems.forEach(function(e){e.contains(t.target)&&(header.classList.remove("open"),navMobile.classList.remove("open"),body.classList.remove("disable"),menuIcon.classList.remove("menu__open--active"))})});var _header=document.querySelector("header"),onChangeHeader=function(){100<=window.pageYOffset?_header.classList.add("active"):_header.classList.remove("active")};window.addEventListener("scroll",function(){onChangeHeader()}),window.addEventListener("load",function(){onChangeHeader()});var tabs=document.querySelectorAll('a[href^="#tab"]'),tabContents=document.querySelectorAll(".work-row");tabs.forEach(function(t){t.addEventListener("click",function(e){e.preventDefault(),removeActive(),addActive(t)})});var removeActive=function(){tabs.forEach(function(e){e.classList.remove("active")}),tabContents.forEach(function(e){e.classList.remove("active")})},addActive=function(e){e.classList.add("active"),document.querySelector("".concat(e.getAttribute("href"))).classList.add("active")};function calcActiveLine(e,t,n){for(var o=0,i=0;i<e;i++)o+=t[i].offsetWidth;n.style.transform="translateX(".concat(o,"px)"),n.style.width=t[e].offsetWidth+"px"}var filterBtns=document.querySelectorAll(".js-filter-btn"),filterBtnActiveLine=document.querySelector(".js-active-line"),filterBtnActive=document.querySelector(".js-filter-btn.active"),activeFilterIndex=0;if(0!=filterBtns.length){for(var _loop=function(e){filterBtns[e].addEventListener("click",function(){calcActiveLine(activeFilterIndex=e,filterBtns,filterBtnActiveLine)})},i=0;i<filterBtns.length;i++)_loop(i);window.addEventListener("resize",function(){filterBtnActiveLine.style.width=filterBtnActive.offsetWidth+"px";for(var e=0;e<filterBtns.length;e++)calcActiveLine(activeFilterIndex,filterBtns,filterBtnActiveLine);filterBtns.forEach(function(e,t){e.classList.contains("filter__btn--active")&&calcActiveLine(t,filterBtns,filterBtnActiveLine)})}),window.addEventListener("load",function(){filterBtnActiveLine.style.width=filterBtnActive.offsetWidth+"px",filterBtns.forEach(function(e,t){e.classList.contains("filter__btn--active")&&calcActiveLine(t,filterBtns,filterBtnActiveLine)})})}var scrollController=new ScrollMagic.Controller,debug=!1,triggerHook=.8,_header2=function(){var e=document.querySelector("header"),t=gsap.timeline();t.to(e,{duration:0,opacity:0,y:20}),t.to(e,{duration:.8,opacity:1,y:0}),animate(e,t)},introAnimations=function(){var e=document.querySelector("#intro"),t=gsap.timeline();t.to(e,{duration:0,opacity:0,y:20}),t.to(e,{duration:.8,opacity:1,y:0}),animate(e,t)},workAnimations=function(){var e=document.querySelector("#work"),t=e.querySelector(".js-work-toggle"),n=e.querySelectorAll(".js-work-item"),o=gsap.timeline();o.to(t,{duration:0,opacity:0,y:20});for(var i=0;i<n.length;i++)o.to(n[i],{duration:0,opacity:0});o.to(t,{duration:.8,opacity:1,y:0});for(var r=0;r<n.length;r++)o.to(n[r],{duration:.8,opacity:1},"-=0.7");animate(e,o)},aboutAnimation=function(){var e=document.querySelector("#about"),t=e.querySelector(".js-about-description"),n=e.querySelectorAll(".js-about-card"),o=gsap.timeline();o.to(t,{duration:0,opacity:0,y:20});for(var i=0;i<n.length;i++)o.to(n[i],{duration:0,opacity:0,y:20});o.to(t,{duration:.8,opacity:1,y:0});for(var r=0;r<n.length;r++)o.to(n[r],{duration:.8,opacity:1,y:0},"-=0.7");animate(e,o)},contactAnimation=function(){var e=document.querySelector("#contact"),t=e.querySelector(".js-contact-title"),n=e.querySelectorAll(".js-contact-item"),o=e.querySelectorAll(".js-contact-content"),i=gsap.timeline();i.to(t,{duration:0,opacity:0,y:20});for(var r=0;r<n.length;r++)i.to(n[r],{duration:0,opacity:0,y:20});i.to(o,{duration:0,opacity:0,y:20}),i.to(t,{duration:.8,opacity:1,y:0});for(var a=0;a<n.length;a++)i.to(n[a],{duration:.8,opacity:1,y:0},"-=0.7");i.to(o,{duration:.8,opacity:1,y:0},"-=0.7"),animate(e,i)};function addClass(e){e=new ScrollMagic.Scene({reverse:!1,triggerHook:triggerHook,triggerElement:e}).setClassToggle(e,"revealed").addTo(scrollController);debug&&e.addIndicators()}function animate(e,t){t=new ScrollMagic.Scene({reverse:!1,triggerHook:triggerHook,triggerElement:e}).setTween(t).addTo(scrollController);debug&&t.addIndicators()}_header2(),introAnimations(),workAnimations(),aboutAnimation(),contactAnimation();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
